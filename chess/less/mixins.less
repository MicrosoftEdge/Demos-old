// ------------------------------------------------------
// Constants
// ------------------------------------------------------

// Cubic
@easeInCubic     :  cubic-bezier(0.550, 0.055, 0.675, 0.190);
@easeOutCubic    :  cubic-bezier(0.215, 0.610, 0.355, 1.000);
@easeInOutCubic  :  cubic-bezier(0.645, 0.045, 0.355, 1.000);

// Circ
@easeInCirc      :  cubic-bezier(0.600, 0.040, 0.980, 0.335);
@easeOutCirc     :  cubic-bezier(0.075, 0.820, 0.165, 1.000);
@easeInOutCirc   :  cubic-bezier(0.785, 0.135, 0.150, 0.860);

// Expo
@easeInExpo      :  cubic-bezier(0.950, 0.050, 0.795, 0.035);
@easeOutExpo     :  cubic-bezier(0.190, 1.000, 0.220, 1.000);
@easeInOutExpo   :  cubic-bezier(1.000, 0.000, 0.000, 1.000);

// Quad
@easeInQuad      :  cubic-bezier(0.550, 0.085, 0.680, 0.530);
@easeOutQuad     :  cubic-bezier(0.250, 0.460, 0.450, 0.940);
@easeInOutQuad   :  cubic-bezier(0.455, 0.030, 0.515, 0.955);

// Quart
@easeInQuart     :  cubic-bezier(0.895, 0.030, 0.685, 0.220);
@easeOutQuart    :  cubic-bezier(0.165, 0.840, 0.440, 1.000);
@easeInOutQuart  :  cubic-bezier(0.770, 0.000, 0.175, 1.000);

// Quint
@easeInQuint     :  cubic-bezier(0.755, 0.050, 0.855, 0.060);
@easeOutQuint    :  cubic-bezier(0.230, 1.000, 0.320, 1.000);
@easeInOutQuint  :  cubic-bezier(0.860, 0.000, 0.070, 1.000);

// Sine
@easeInSine      :  cubic-bezier(0.470, 0.000, 0.745, 0.715);
@easeOutSine     :  cubic-bezier(0.390, 0.575, 0.565, 1.000);
@easeInOutSine   :  cubic-bezier(0.445, 0.050, 0.550, 0.950);

// Back
@easeInBack      :  cubic-bezier(0.600, -0.280, 0.735, 0.045);
@easeOutBack     :  cubic-bezier(0.175,  0.885, 0.320, 1.275);
@easeInOutBack   :  cubic-bezier(0.680, -0.550, 0.265, 1.550);

// Custom
@easeOutSmallBounce: cubic-bezier(0.175, 0.885, 0.315, 1.190);

// ------------------------------------------------------
// Mixin Helpers (functions used just inside of this file)
// ------------------------------------------------------

// apply the standard prefixes for webkit, mozilla and ms

.vendor(@property, @value){
    -webkit-@{property}: @value;
       -moz-@{property}: @value;
        -ms-@{property}: @value;
         -o-@{property}: @value;
            @{property}: @value;
}

.vendor(@property, @val1, @val2){
    -webkit-@{property}: @val1, @val2;
       -moz-@{property}: @val1, @val2;
        -ms-@{property}: @val1, @val2;
         -o-@{property}: @val1, @val2;
            @{property}: @val1, @val2;
}

.vendor(@property, @val1, @val2, @val3){
    -webkit-@{property}: @val1, @val2, @val3;
       -moz-@{property}: @val1, @val2, @val3;
        -ms-@{property}: @val1, @val2, @val3;
         -o-@{property}: @val1, @val2, @val3;
            @{property}: @val1, @val2, @val3;
}

.vendor(@property, @val1, @val2, @val3, @val4){
    -webkit-@{property}: @val1, @val2, @val3, @val4;
       -moz-@{property}: @val1, @val2, @val3, @val4;
        -ms-@{property}: @val1, @val2, @val3, @val4;
         -o-@{property}: @val1, @val2, @val3, @val4;
            @{property}: @val1, @val2, @val3, @val4;
}

// ------------------------------------------------------
// Text Shadow
// ------------------------------------------------------

.text-shadow(@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
    text-shadow: @string;
}

.text-shadow(@distX: 0, @distY: 2px, @blur: 5px, @color: fade(black, 75%)) {
	text-shadow: @distX @distY @blue @color;
}


// ------------------------------------------------------
// Box Shadow
// syntax updated: oct/14
// supports: basically anything modern (no IE8)
// ------------------------------------------------------

.box-shadow(@blur:5px, @distance: 2px, @color:rgba(0,0,0,0.75), @spread: 0) {
    box-shadow: 0 @distance @blur @spread @color;
}

.inner-shadow(@blur:5px, @distance: 2px, @color:rgba(0,0,0,0.75), @spread: 0) {
    box-shadow: inset 0 @distance @blur @spread @color;
}

.glow(@color: fade(white, 50%), @amount: 5px) {
    box-shadow: 0 0 (@amount * 2) @color;
}

// ------------------------------------------------------
// Box Sizing
// syntax updated: oct/14
// supports: Chrome, Firefox 29+, IE 8+, Opera, Safari 5.1
// ------------------------------------------------------

.box-sizing(@type: border-box) {
    box-sizing: @type;
}

// ------------------------------------------------------
// Border Radius
// syntax updated: oct/14
// supports: Android 2.1+, Chrome, Firefox 4+, IE 9+, iOS 4+, Opera 10.50+, Safari 5+
// ------------------------------------------------------

.border-radius(@radius: 5px) {
    border-radius: @radius;
    background-clip: padding-box;
}

// ------------------------------------------------------
// Gradients
// syntax updated: oct/14
// supports: Safari 5.1+, iOS 5.0+, Chrome 10+, FF15+, IE10+
// note: stops can include positioning (e.g "red 45%")
// ------------------------------------------------------

.grad(@dir, @stop0, @stop1) {
    background-image: -webkit-linear-gradient(@dir, @stop0, @stop1);
    background-image: linear-gradient(to @dir, @stop0, @stop1);
}

.grad(@dir, @stop0, @stop1, @stop2) {
    background-image: -webkit-linear-gradient(@dir, @stop0, @stop1, @stop2);
    background-image: linear-gradient(to @dir, @stop0, @stop1, @stop2);
}

.grad(@dir, @stop0, @stop1, @stop2, @stop3) {
    background-image: -webkit-linear-gradient(@dir, @stop0, @stop1, @stop2, @stop3);
    background-image: linear-gradient(to @dir, @stop0, @stop1, @stop2, @stop3);
}

.grad(@dir, @stop0, @stop1, @stop2, @stop3, @stop4) {
    background-image: -webkit-linear-gradient(@dir, @stop0, @stop1, @stop2, @stop3, @stop4);
    background-image: linear-gradient(to @dir, @stop0, @stop1, @stop2, @stop3, @stop4);
}

.grad(@dir, @stop0, @stop1, @stop2, @stop3, @stop4, @stop5) {
    background-image: -webkit-linear-gradient(@dir, @stop0, @stop1, @stop2, @stop3, @stop4, @stop5);
    background-image: linear-gradient(to @dir, @stop0, @stop1, @stop2, @stop3, @stop4, @stop6);
}

.grad-h(@stop0, @stop1) {
    .grad(right, @stop0, @stop1);
}

.grad-v(@stop0, @stop1) {
    .grad(bottom, @stop0, @stop1);
}

.grad-45(@stop0, @stop1) {
    .grad(45deg, @stop0, @stop1);
}

// ------------------------------------------------------
// Stripes Events
// syntax updated: aug/15
// no need for prefixes on this, IE9 and up
// ------------------------------------------------------

.vertical-stripes(@color1, @width1, @color2, @width2) {

    background: repeating-linear-gradient(
      90deg,
      @color1,
      @color1 @width1,
      @color2 @width1,
      @color2 (@width1 + @width2)
    );

}


// ------------------------------------------------------
// Pointer Events
// syntax updated: nov/14
// no need for prefixes on this, IE11 and up only though
// ------------------------------------------------------

.pointer-events-off() {
    pointer-events: none;
}

.pointer-events-on() {
    pointer-events: auto;
}

// ------------------------------------------------------
// Flex Box
// syntax updated: mar/15
// appears to still need some prefixes, support is gaining though
// http://shouldiprefix.com/#flexbox
// ------------------------------------------------------

// flex container properties

.flex-container(@display: flex) {
    display: ~"-webkit-@{display}";
    display: ~"-moz-@{display}";
    display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
    display: ~"-ms-@{display}"; // IE11
    display: @display;
}

.flex-container-direction(@direction: row) {
    // row | row-reverse | column | column-reverse
    .vendor(flex-direction, @direction);
}

.flex-container-wrap(@wrap: nowrap) {
    // nowrap | wrap | wrap-reverse
    .vendor(flex-wrap, @wrap);
}

.flex-container-flow(@flow) {
    .vendor(flex-flow, @flow);
}

.flex-container-justify-content(@justify: flex-start) {
    .vendor(justify-content, @justify);
}

.flex-container-align-content(@align: stretch) {
    .vendor(flex-align-content, @align);
}

.flex-container-align-items(@align: stretch) {
    // flex-start | flex-end | center | baseline | stretch
    .vendor(align-items, @align);
}

// flex item properties

.flex(@columns: initial) {
    .vendor(flex, @columns);
}

.flex-item-order(@order: 0) {
    .vendor(flex-order, @order);
}

.flex-item-grow(@grow: 0) {
    .vendor(flex-grow, @grow);
}

.flex-item-shrink(@shrink: 1) {
    .vendor(flex-shrink, @shrink);
}

.flex-item-basis(@width: auto) {
    .vendor(flex-basis, @width);
}

.flex-item-align-self(@align: auto) {
    // auto | flex-start | flex-end | center | baseline | stretch
    .vender(flex-align-self, @align);
}

// ------------------------------------------------------
// Transitions
// ------------------------------------------------------

.transition(@transition) {
    .vendor(transition, @transition);
}

.transition(@transition1, @transition2) {
   .vendor(transition, @transition1, @transition2);
}

.transition(@transition1, @transition2, @transition3) {
   .vendor(transition, @transition1, @transition2, @transition3);
}

.transition(@transition1, @transition2, @transition3, @transition4) {
   .vendor(transition, @transition1, @transition2, @transition3, @transition4);
}

.transition-transform(@transformargs) {
    -webkit-transition: -webkit-transform @transformargs;
    -moz-transition: -moz-transform @transformargs;
    -ms-transition: -ms-transform @transformargs;
    -o-transition: -o-transform @transformargs;
    transition: transform @transformargs;
}

.transition-transform(@transformargs, @transition2) {
    -webkit-transition: -webkit-transform @transformargs, @transition2;
    -moz-transition: -moz-transform @transformargs, @transition2;
    -ms-transition: -ms-transform @transformargs, @transition2;
    -o-transition: -o-transform @transformargs, @transition2;
    transition: transform @transformargs, @transition2;
}

.transition-transform(@transformargs, @transition2, @transition3) {
    -webkit-transition: -webkit-transform @transformargs, @transition2, @transition3;
    -moz-transition: -moz-transform @transformargs, @transition2, @transition3;
    -ms-transition: -ms-transform @transformargs, @transition2, @transition3;
    -o-transition: -o-transform @transformargs, @transition2, @transition3;
    transition: transform @transformargs, @transition2, @transition3;
}

// ------------------------------------------------------
// Transforms
// ------------------------------------------------------

.transform(@string){
    .vendor(transform, @string);
}

.scale(@factor) {
    -webkit-transform: scale(@factor);
    -moz-transform: scale(@factor);
    -ms-transform: scale(@factor);
    -o-transform: scale(@factor);
    transform: scale(@factor);
}

.rotate(@deg) {
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    -ms-transform: rotate(@deg);
    -o-transform: rotate(@deg);
    transform: rotate(@deg);
}

.backface-visibility(@string) {
    backface-visibility: @string;
    -webkit-backface-visibility: @string;
    -moz-backface-visibility: @string;
    -ms-backface-visibility: @string;
    backface-visibility: @string;
}

.skew(@deg, @deg2) {
    -webkit-transform: skew(@deg, @deg2);
    -moz-transform: skew(@deg, @deg2);
    -ms-transform: skew(@deg, @deg2);
    -o-transform: skew(@deg, @deg2);
    transform: skew(@deg, @deg2);
}

.translate(@x, @y:0) {
    -webkit-transform: translate(@x, @y);
    -moz-transform: translate(@x, @y);
    -ms-transform: translate(@x, @y);
    -o-transform: translate(@x, @y);
    transform: translate(@x, @y);
}

.translate-x(@x) {
    -webkit-transform: translateX(@x);
    -moz-transform: translateX(@x);
    -ms-transform: translateX(@x);
    -o-transform: translateX(@x);
    transform: translateX(@x);
}

.translate-y(@y) {
    -webkit-transform: translateY(@y);
    -moz-transform: translateY(@y);
    -ms-transform: translateY(@y);
    -o-transform: translateY(@y);
    transform: translateY(@y);
}

.translate3d(@x, @y: 0, @z: 0) {
    -webkit-transform: translate3d(@x, @y, @z);
    -moz-transform: translate3d(@x, @y, @z);
    -ms-transform: translate3d(@x, @y, @z);
    -o-transform: translate3d(@x, @y, @z);
    transform: translate3d(@x, @y, @z);
}

.perspective(@value: 1000) {
    -webkit-perspective: @value;
    -moz-perspective: @value;
    -ms-perspective: @value;
    perspective: @value;
}

.perspective-origin(@x:center, @y:center) {
    -webkit-perspective-origin: @x @y;
    -moz-perspective-origin: @x @y;
    -ms-perspective-origin: @x @y;
    -o-perspective-origin: @x @y;
    perspective-origin: @x @y;
}

.transform-origin(@x:center, @y:center) {
    -webkit-transform-origin: @x @y;
    -moz-transform-origin: @x @y;
    -ms-transform-origin: @x @y;
    -o-transform-origin: @x @y;
    transform-origin: @x @y;
}

// ------------------------------------------------------
// Text Selection
// ------------------------------------------------------

.no-select() {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    -webkit-touch-callout: none;
    -webkit-user-drag: none;
    user-drag: none;
}

.text-select(@val:text) {
    -webkit-user-select: @val;
    -moz-user-select: @val;
    -ms-user-select: @val;
    user-select: @val;

    -webkit-touch-callout: @val;
}

.selection-color(@bg, @fg) {
    ::selection {
        background: @bg;
        color: @fg;
    }
    ::-moz-selection {
        background: @bg;
        color: @fg;
    }
}

// ------------------------------------------------------
// Absolute Positioning
// ------------------------------------------------------

.absolute(@top:0, @right:0, @bottom:0, @left:0) {
    position: absolute;
    top: @top;
    right: @right;
    bottom: @bottom;
    left: @left;
}

.absolute(@val) {
    .absolute(@val, @val, @val, @val);
}

.lefttop(@left:0, @top:0) {
    position: absolute;
    top: @top;
    left: @left;
}

.righttop(@right:0, @top:0) {
    position: absolute;
    top: @top;
    right: @right;
}

.rightbottom(@right:0, @bottom:0) {
    position: absolute;
    right: @right;
    bottom: @bottom;
}

.leftbottom(@left:0, @bottom:0) {
    position: absolute;
    bottom: @bottom;
    left: @left;
}

// ------------------------------------------------------
// Absolute Centering
// ------------------------------------------------------

.center-left(@width) {
    position: absolute;
    left: 50%;
    margin-left: @width / -2;
}

.center-top(@height) {
    position: absolute;
    top: 50%;
    margin-top: @height / -2;
}

.center-lefttop(@width, @height) {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: @height / -2;
    margin-left: @width / -2;
}


// ------------------------------------------------------
// Absolute Docking
// ------------------------------------------------------

.dock-top() {
    .absolute(0,0,auto,0);
}

.dock-top(@h) {
	.dock-top();
	height: @h;
}

.dock-left() {
    .absolute(0,auto,0,0);
}

.dock-left(@w) {
    .dock-left();
    width: @w;
}

.dock-right() {
    .absolute(0,0,0,auto);
}

.dock-right(@w) {
    .dock-right();
    width: @w;
}

.dock-bottom() {
    .absolute(auto,0,0,0);
}

.dock-bottom(@h) {
    .dock-bottom();
    height: @h;
}

// ------------------------------------------------------
// Fixed Positioning
// ------------------------------------------------------

.fixed(@top:0, @right:0, @bottom:0, @left:0) {
    position: fixed;
    top: @top;
    right: @right;
    bottom: @bottom;
    left: @left;
}

.fixed(@val) {
    position: fixed;
    top: @val;
    right: @val;
    bottom: @val;
    left: @val;
}

.fixed(@topbottom, @leftright) {
    position: fixed;
    top: @topbottom;
    right: @leftright;
    bottom: @topbottom;
    left: @leftright;
}

// ------------------------------------------------------
// Text Helpers
// ------------------------------------------------------

.ellipsis() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.hide-text() {
    text-indent: -9999px;
}

.show-text() {
    text-indent: 0px;
}

.font-smoothing(@val: antialiased) {

    // changes text rendering in chrome
    // none: turn it off
    // antialiased: crisper, thinner text
    // subpixel-antialiased: stronger, bolder text

    -webkit-font-smoothing: antialiased;
}

// ------------------------------------------------------
// CSS Arrows and Icons
// ------------------------------------------------------

.arrow-up-size(@width, @height) {
    border-width: 0 @width/2px @height*1px @width/2px;
    width: 0;
    height: 0;
}
.arrow-up-color(@color) {
    border-style: solid;
    border-color: transparent transparent @color transparent;
}

.arrow-up(@width, @height, @color) {
    .arrow-up-size(@width, @height);
    .arrow-up-color(@color);
}

.arrow-down-size(@width, @height) {
    width: 0;
    height: 0;
    border-width: @height*1px @width/2px 0 @width/2px;
}

.arrow-down-color(@color) {
    border-style: solid;
    border-color: @color transparent transparent transparent;
}

.arrow-down(@width, @height, @color) {
    .arrow-down-size(@width, @height);
    .arrow-down-color(@color);
}

.arrow-right-size(@width, @height) {
    width: 0;
    height: 0;
    border-width: @height/2px 0 @height/2px @width*1px;
}

.arrow-right-color(@color) {
    border-style: solid;
    border-color: transparent transparent transparent @color;
}

.arrow-right(@width, @height, @color) {
    .arrow-right-size(@width, @height);
    .arrow-right-color(@color);
}

.close-x() {
    content: '×'; /* UTF-8 symbol */
    font-family: 'Arial', sans-serif;
}

// ------------------------------------------------------
// Counters
// ------------------------------------------------------

.counter-container(@name: num) {
    counter-reset: @name;
}

.counter-append-before(@style: decimal, @name: num) {
    &:before {
        content: counter(@name, @style);
        counter-increment: @name;
    }
}

// ------------------------------------------------------
// Miscellaneous
// ------------------------------------------------------

// css image

.image(@src, @width, @height, @scale: 1) {
    width: @width * @scale;
    height: @height * @scale;
    background-image: url(@src);
    background-size: 100% 100%;
    background-repeat: no-repeat;
}

// css image with that changes on hover

.image-hover(@src, @srchover, @width, @height, @scale: 1, @fade: 0) {
    width: @width * @scale;
    height: @height * @scale;
    &:before {
        content: '';
        .lefttop();
        width: @width * @scale;
        height: @height * @scale;
        background-image: url(@src);
        background-size: 100% 100%;
        background-repeat: no-repeat;
    }
    &:after {
        content: '';
        .transition(opacity @fade);
        .lefttop();
        width: @width * @scale;
        height: @height * @scale;
        background-image: url(@srchover);
        background-size: 100% 100%;
        background-repeat: no-repeat;
        opacity: 0;
    }
    &:hover {
        &:after {
            opacity: 1;
        }
    }
}


.center-sprite-after(@sprite) {
    content: '';
    .sprite(@sprite);
    .lefttop(50%, 50%);
    margin-left: ~`("@{sprite}".split(', ')[4]).replace('px', '') / -2 + 'px'`;
    margin-top: ~`("@{sprite}".split(', ')[5]).replace('px', '') / -2 + 'px'`;
    //@sprite-height: ~`("@{sprite}".split(', ')[5])`;
}

// responsive helper

.switchToSmall(@display: inline) {
    small { display: @display };
    big { display: none }
}

.switchToBig(@display: inline) {
    big { display: @display };
    small { display: none }
}

// ie8 backwards compatibility

.opacity(@op) {
    @filterop: @op * 100;
    -ms-filter: ~'"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{filterop})"';
    opacity: @op;
}
